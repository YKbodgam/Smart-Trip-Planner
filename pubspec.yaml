name: pathoria
description: A Smart Trip Planner app that uses AI to generate personalized travel itineraries
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.9.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.

dependencies:
  flutter:
    sdk: flutter

  cupertino_icons: ^1.0.8
  flutter_dotenv: ^6.0.0

  # üõ†Ô∏è Utilities & Setup
  flutter_native_splash: ^2.4.5

  # State Management
  flutter_riverpod: ^2.4.9
  riverpod_annotation: ^2.3.3   # ‚úÖ stay on 2.3.3 for compat

  # UI & Responsive Design
  flutter_screenutil: ^5.9.3
  flutter_svg: ^2.0.9

  # Navigation
  go_router: ^16.2.0
  
  # Local Storage
  isar: ^3.1.0+1
  isar_flutter_libs: ^3.1.0+1
  path_provider: ^2.1.1
  
  # HTTP & API
  dio: ^5.4.0
  retrofit: ^4.0.3
  json_annotation: ^4.9.0

  # Authentication
  google_sign_in: ^7.1.1
  firebase_auth: ^6.0.1
  firebase_core: ^4.0.0
  
  # Maps Integration
  url_launcher: ^6.2.2
  
  # Utilities
  equatable: ^2.0.5
  uuid: ^4.2.1
  intl: ^0.20.2
  dartz: ^0.10.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.

  flutter_lints: ^6.0.0

  # Code Generation
  build_runner: ^2.4.7
  retrofit_generator: ^8.0.4
  riverpod_generator: ^2.3.9
  json_serializable: ^6.7.1
  isar_generator: ^3.1.0+1
  
  # Testing
  mockito: ^5.4.4
  http_mock_adapter: ^0.6.1


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  
  fonts:
    - family: Inter
      fonts:
        # Regular weights
        - asset: assets/fonts/Inter-Light.ttf
          weight: 300
        - asset: assets/fonts/Inter-Regular.ttf
          weight: 400
        - asset: assets/fonts/Inter-Medium.ttf
          weight: 500
        - asset: assets/fonts/Inter-SemiBold.ttf
          weight: 600
        - asset: assets/fonts/Inter-Bold.ttf
          weight: 700
        - asset: assets/fonts/Inter-Black.ttf
          weight: 900
        
        # Italic variants
        - asset: assets/fonts/Inter-LightItalic.ttf
          weight: 300
          style: italic
        - asset: assets/fonts/Inter-Italic.ttf
          weight: 400
          style: italic
        - asset: assets/fonts/Inter-MediumItalic.ttf
          weight: 500
          style: italic
        - asset: assets/fonts/Inter-SemiBoldItalic.ttf
          weight: 600
          style: italic
        - asset: assets/fonts/Inter-BoldItalic.ttf
          weight: 700
          style: italic
        - asset: assets/fonts/Inter-BlackItalic.ttf
          weight: 900
          style: italic
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
